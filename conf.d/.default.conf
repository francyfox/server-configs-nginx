# ----------------------------------------------------------------------
# | Default behavior for unknown hosts                                 |
# ----------------------------------------------------------------------
#
# Drop requests for unknown hosts.
#
# If no default server is defined, Nginx will use the first found server.
# To prevent host header attacks, or other potential problems when an unknown
# server name is used in a request, it's recommended to drop the request
# returning 444 "No Response".
#
# (1) In production, only secure hosts should be used (all `no-ssl` disabled).
#     If so, redirect first ANY request to a secure connection before handling
#     it, even if the host is unknown.
#
#     https://observatory.mozilla.org/faq/

http {
  server {
      # You would want to make a separate file with its own server block for each virtual domain
      # on your server and then include them.
      listen       80;
      #tells Nginx the hostname and the TCP port where it should listen for HTTP connections.
      # listen 80; is equivalent to listen *:80;

      server_name  localhost;
      # lets you doname-based virtual hosting

      #charset koi8-r;

      #access_log  logs/host.access.log  main;

      location / {
          #The location setting lets you configure how nginx responds to requests for resources within the server.
          root   html;
          index  index.html index.htm;
      }

      #error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   html;
      }

      # proxy the PHP scripts to Apache listening on 127.0.0.1:80
      #
      #location ~ \.php$ {
      #    proxy_pass   http://127.0.0.1;
      #}

      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
      #
      #location ~ \.php$ {
      #    root           html;
      #    fastcgi_pass   127.0.0.1:9000;
      #    fastcgi_index  index.php;
      #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
      #    include        fastcgi_params;
      #}

      # deny access to .htaccess files, if Apache's document root
      # concurs with nginx's one
      #
      #location ~ /\.ht {
      #    deny  all;
      #}
  }
}
